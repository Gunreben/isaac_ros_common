#---
# name: zed_ros
# group: sensors
# depends: [ros:humble-desktop, zed]
#---

ARG BASE_IMAGE
FROM ${BASE_IMAGE}

ARG ROS_VERSION=humble

ENV ROS_DISTRO=${ROS_VERSION}
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
ENV ROS_WS=/workspaces/isaac_ros-dev
ENV ROS_PYTHON_VERSION=3
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /tmp

# Install necessary dependencies
RUN apt-get update && apt-get install -y \
    git \
    && rm -rf /var/lib/apt/lists/*


# Klonen des ZED-ROS-Pakets
#RUN mkdir -p ${ROS_WS}/src \
#    && cd ${ROS_WS}/src \
#    && git clone  --recursive https://github.com/stereolabs/zed-ros2-wrapper.git

# Change working directory
WORKDIR ${ROS_WS}/

RUN apt-get update && apt-get install -y \
    python3-rosdep \
    python3-rosinstall-generator \
    python3-vcstool \
    python3-rosinstall \
    build-essential \
    && rm -rf /var/lib/apt/lists/*
    

RUN . ${ROS_ROOT}/setup.bash \
    && apt-get update\
    && cd ${ROS_WS} \
    && rosdep install --from-paths src --ignore-src -r -y

RUN . ${ROS_ROOT}/setup.bash \
    && rm -rf /var/lib/apt/lists/* \
    && cd ${ROS_WS} \
    && colcon build --symlink-install --packages-select-regex zed* --cmake-args -DCMAKE_CXX_FLAGS="-Wl,--allow-shlib-undefined"    
#    && colcon build --symlink-install --packages-select-regex zed* --cmake-args -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs -DCMAKE_CXX_FLAGS="-Wl,--allow-shlib-undefined"     

# commands will be appended/run by the entrypoint which sources the ROS environment
COPY ros_entrypoint.sh /ros_entrypoint.sh

RUN chmod +x /ros_entrypoint.sh

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["/bin/bash"]


WORKDIR /
